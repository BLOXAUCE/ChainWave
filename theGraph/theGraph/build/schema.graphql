type MessageFailed @entity(immutable: true) {
  id: Bytes!
  _srcChainId: Int! # uint16
  _srcAddress: Bytes! # bytes
  _nonce: BigInt! # uint64
  _payload: Bytes! # bytes
  _reason: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProposalCreated @entity(immutable: true) {
  id: Bytes!
  VotingExecutor_id: BigInt! # uint256
  format: Int! # uint8
  root: Bytes! # bytes32
  deadline: BigInt! # uint64
  optionsLength: Int! # uint8
  options: [Option!]! @derivedFrom(field: "proposal")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Option @entity {
  id: Bytes!
  optionId: Int! # This will store the OptionID like 1, 2, etc.
  proposal: ProposalCreated!
  positiveVotes: BigInt!
  negativeVotes: BigInt!
}

type RetryMessageSuccess @entity(immutable: true) {
  id: Bytes!
  _srcChainId: Int! # uint16
  _srcAddress: Bytes! # bytes
  _nonce: BigInt! # uint64
  _payloadHash: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetMinDstGas @entity(immutable: true) {
  id: Bytes!
  _dstChainId: Int! # uint16
  _type: Int! # uint16
  _minDstGas: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetPrecrime @entity(immutable: true) {
  id: Bytes!
  precrime: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetTrustedRemote @entity(immutable: true) {
  id: Bytes!
  _remoteChainId: Int! # uint16
  _path: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SetTrustedRemoteAddress @entity(immutable: true) {
  id: Bytes!
  _remoteChainId: Int! # uint16
  _remoteAddress: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteRecorded @entity(immutable: true) {
  id: Bytes!
  VotingExecutor_id: BigInt! # uint256
  optionId: BigInt! # uint256
  voter: Bytes! # address
  vote: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteSent @entity(immutable: true) {
  id: Bytes!
  proposalId: BigInt! # uint256
  optionId: Int! # uint8
  voter: Bytes! # address
  vote: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
